tags:
  nginz: true
  brig: true
  galley: true
  gundeck: true
  cannon: true
  cargohold: true
  spar: true
  federator: true # also see galley.config.enableFederator and brig.config.enableFederator
  proxy: false
  webapp: false
  team-settings: false
  account-pages: false
  legalhold: false
  sftd: false

cassandra-migrations:
  imagePullPolicy: Always
  cassandra:
    host: cassandra-ephemeral
    replicaCount: 1
elasticsearch-index:
  imagePullPolicy: Always
  elasticsearch:
    host: elasticsearch-ephemeral
    index: directory_test
  cassandra:
    host: cassandra-ephemeral

brig:
  replicaCount: 1
  imagePullPolicy: Always
  resources:
    requests: {}
    limits:
      memory: 512Mi
      cpu: 500m
  config:
    externalUrls:
      nginz: https://kube-staging-nginz-https.zinfra.io
      teamCreatorWelcome: https://teams.wire.com/login
      teamMemberWelcome: https://wire.com/download
    cassandra:
      host: cassandra-ephemeral
      replicaCount: 1
    elasticsearch:
      host: elasticsearch-ephemeral
      index: directory_test
    authSettings:
      userTokenTimeout: 120
      sessionTokenTimeout: 20
      accessTokenTimeout: 30
      providerTokenTimeout: 60
    enableFederator: true # keep in sync with galley.config.enableFederator and tags.federator!
    optSettings:
      setActivationTimeout: 5
      # keep this in sync with brigSettingsTeamInvitationTimeout in spar/templates/tests/configmap.yaml
      setTeamInvitationTimeout: 10
      setExpiredUserCleanupTimeout: 1
      setUserMaxConnections: 16
      setCookieInsecure: true
      setUserCookieRenewAge: 2
      setUserCookieLimit: 5
      setUserCookieThrottle:
        stdDev: 5
        retryAfter: 5
      setLimitFailedLogins:
        timeout: 5  # seconds.  if you reach the limit, how long do you have to wait to try again.
        retryLimit: 5  # how many times can you have a failed login in that timeframe.
      setSuspendInactiveUsers:
        suspendTimeout: 10
      setDefaultLocale: en
      setMaxConvAndTeamSize: 16
      setMaxTeamSize: 32
      setMaxConvSize: 16
      setFederationDomain: integration.example.com
    aws:
      sesEndpoint: http://fake-aws-ses:4569
      sqsEndpoint: http://fake-aws-sqs:4568
      dynamoDBEndpoint: http://fake-aws-dynamodb:4567
      sesQueue: integration-brig-events
      internalQueue: integration-brig-events-internal
      prekeyTable: integration-brig-prekeys
    emailSMS:
      general:
        emailSender: backend-integrationk8s@wire.com
        smsSender: dummy
  secrets:
    # these secrets are only used during integration tests and should therefore be safe to include unencrypted in git.
    # Normally these would live in a separately-encrypted secrets.yaml file and incorporated using the helm secrets plugin (wrapper around mozilla sops)
    zAuth:
      privateKeys: 7owt9MgvLd3D1nQ5s5Zm-5kOiUZcJ_iqASOYdzLUpjHRRbfyx7XJ6hzltU0S9_kvKsdYZmTK9wZNWKUraB4Z1Q==
      publicKeys: 0UW38se1yeoc5bVNEvf5LyrHWGZkyvcGTVilK2geGdU=
    turn:
      secret: rPrUbws7PQZlfN2GG8Ggi7g5iOYPk7BiCoKHl3VoFZ
    awsKeyId: dummykey
    awsSecretKey: dummysecret
    setTwilio: |
      sid: "dummy"
      token: "dummy"
    setNexmo: |-
      key: "dummy"
      secret: "dummy"
    smtpPassword: dummy-smtp-password
  tests:
    enableFederationTests: true
cannon:
  replicaCount: 2
  imagePullPolicy: Always
  resources:
    requests: {}
    limits:
      memory: 512Mi
      cpu: 500m
  drainTimeout: 0
cargohold:
  replicaCount: 1
  imagePullPolicy: Always
  resources:
    requests: {}
    limits:
      memory: 512Mi
      cpu: 500m
  config:
    aws:
      s3Bucket: dummy-bucket
      s3Endpoint: http://fake-aws-s3:9000
  secrets:
    awsKeyId: dummykey
    awsSecretKey: dummysecret
galley:
  replicaCount: 1
  imagePullPolicy: Always
  config:
    cassandra:
      host: cassandra-ephemeral
      replicaCount: 1
    enableFederator: true # keep in sync with brig.config.enableFederator and tags.federator!
    settings:
      maxConvAndTeamSize: 16
      maxTeamSize: 32
      maxFanoutSize: 18
      maxConvSize: 16
      conversationCodeURI: https://kube-staging-nginz-https.zinfra.io/conversation-join/
      enableIndexedBillingTeamMembers: true
      federationDomain: integration.example.com
      featureFlags:
        sso: disabled-by-default  # this needs to be the default; tests can enable it when needed.
        legalhold: whitelist-teams-and-implicit-consent
        teamSearchVisibility: disabled-by-default
        classifiedDomains:
          status: enabled
          config:
            domains: ["example.com"]
    journal:
      endpoint: http://fake-aws-sqs:4568
      queue: integration-team-events.fifo
  secrets:
    awsKeyId: dummykey
    awsSecretKey: dummysecret
gundeck:
  replicaCount: 1
  imagePullPolicy: Always
  resources:
    requests: {}
    limits:
      memory: 1024Mi
      cpu: 1000m
  config:
    cassandra:
      host: cassandra-ephemeral
      replicaCount: 1
    redis:
      host: redis-ephemeral-master
    aws:
      account: "123456789012"
      region: eu-west-1
      arnEnv: integration
      queueName: integration-gundeck-events
      sqsEndpoint: http://fake-aws-sqs:4568
      snsEndpoint: http://fake-aws-sns:4575
    bulkPush: true
    setMaxConcurrentNativePushes:
      hard: 30
      soft: 10
  secrets:
    awsKeyId: dummykey
    awsSecretKey: dummysecret
nginz:
  replicaCount: 1
  imagePullPolicy: Always
  nginx_conf:
    env: staging
    external_env_domain: zinfra.io
  secrets:
    basicAuth: "whatever"
    zAuth:
      # this must match the key in brig!
      publicKeys: 0UW38se1yeoc5bVNEvf5LyrHWGZkyvcGTVilK2geGdU=
proxy:
  replicaCount: 1
  imagePullPolicy: Always
  secrets:
    proxy_config: |-
      secrets {
              youtube    = "..."
              googlemaps = "..."
              soundcloud = "..."
              giphy      = "..."
              spotify    = "Basic ..."
       }
spar:
  replicaCount: 1
  imagePullPolicy: Always
  resources:
    requests: {}
    limits:
      memory: 1024Mi
      cpu: 1000m
  config:
    tlsDisableCertValidation: true
    cassandra:
      host: cassandra-ephemeral
    logLevel: Debug
    domain: zinfra.io
    appUri: http://spar:8080/
    ssoUri: http://spar:8080/sso
    maxttlAuthreq: 5
    maxttlAuthresp: 7200
    maxScimTokens: 2
    contacts:
    - type: ContactSupport
      company: Example Company
      email: email:backend+spar@wire.com

federator:
  replicaCount: 1
  imagePullPolicy: Always
  config:
    optSettings:
      setFederationStrategy:
        allowAll: true
  # TODO: add a matching certificate to the ingress(es); see comment
  # in hack/helm_vars/nginx-ingress-services/values.yaml
  remoteCAContents: |
    -----BEGIN CERTIFICATE-----
    MIIDAjCCAeqgAwIBAgIUJ+1IpVKexlyGhgZaOZi2Ka01Q2QwDQYJKoZIhvcNAQEL
    BQAwGTEXMBUGA1UEAxMOY2EuZXhhbXBsZS5jb20wHhcNMjEwMzA5MjA0MDAwWhcN
    MjYwMzA4MjA0MDAwWjAZMRcwFQYDVQQDEw5jYS5leGFtcGxlLmNvbTCCASIwDQYJ
    KoZIhvcNAQEBBQADggEPADCCAQoCggEBAKcH/9ndmK2kA6QoqT1bWEfuwTbuOwIJ
    A+5BbxoaMSYQz+wrFFXaalOYLFVaPJL4ZIeJNbbCcrllnip+qYjUl8VAhSHPNCpF
    D4LGH+b/kQV6+9xXYHsx0DYTYtHUWQofmBv4Te6Tl+OvgdD8isFBDE3lKos5JhVO
    bSCzzDMgwBsdQadiwaCYuLvuPH80wzGlkl5wlRdOBvfgOCw88NHz3QzICixIlyfB
    j6D7NHDbOjCaBQ4KXoM8tZr+1+6LZkVU2mn2RneE06OpRgtlVUkubaY+EH8/z8cg
    iyu7X+dN9xzVhCcwMOos0V6fOPVX3qx7mBGz/tpXsTZPbZeOQbBYZK8CAwEAAaNC
    MEAwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFLJ
    Dc8PpKsUGFi33sK+r5Xgi97XMA0GCSqGSIb3DQEBCwUAA4IBAQBtiav0b3r4k3CC
    N1DRNNpcvpHR8odPJkxR2r0kCLRqwu2YDxQYxCK5wCPNcpzGDd6nyg/nLWBzl4Vd
    UwBIUPSVavDAeQ8VL0YNCNhQlL4x6z5rT1aSRdp0VlRnnl4zjilWSN/IB5Y61i0Q
    Ww7Sd5T9hZUCOJm5bAeLo4+cxkOwN6jdT2wmLtgFkj4CFVvS/8nL8ZwC1qvt3mLs
    E8q7/KelKgddU5AET8Viim20m6ZxgGNWIX33LBiJ3Rg3QuJMnWyfBI6PCORRrdTb
    0AH/F3iUKQL8Zv6twr++S7VPeDllVgEXkq457ZBi2qJPikL5cUprV/0bWQxgf4+1
    L70TaNMy
    -----END CERTIFICATE-----
